{
    "Description":"Template to automatically provision SSM Document on AWS for Qualys Cloud Agent Deployment",
    "Metadata":{
        "Author": "Nischay Sinha",
        "Version": "1.0",
        "Updated": "08/09/2022"
    },
    "Parameters":{
        "SSMdocumentName":{
            "Type": "String",
            "Default": "",
            "Description":"Name of the SSM Document to be created"
        }
    },
    "Resources": {
        "SSMDocument": {
            "Type": "AWS::SSM::Document",
            "Properties": {
                "Attachments": [],
                "Content": {
                    "schemaVersion": "2.2",
                    "description": "Manage Qualys Cloud Agent on EC2 instances",
                    "parameters": {
                        "ActivationID": {
                            "type": "String",
                            "description": "(Required) Enter ActivationID obtained from Qualys CP (do not include {})"
                        },
                        "CustomerID": {
                            "type": "String",
                            "description": "(Required) Enter CustomerID as displayed in your account (do not include {})"
                        },
                        "WebServiceUri": {
                            "type": "String",
                            "description": "Enter WebServiceUri in format of <Cloud Agent Server URL>/CloudAgent/, Cloud Agent Server URL can be found at https://www.qualys.com/platform-identification/"
                        },
                        "QualysAPIUri": {
                            "type": "String",
                            "default": "",
                            "description": "Qualys API Server URL"
                        },
                        "UserName": {
                            "type": "String",
                            "default": "",
                            "description": "Qualys username"
                        },
                        "Password": {
                            "type": "String",
                            "default": "",
                            "description": "Qualys Password"
                            
                        },
                        "LogLevel": {
                            "type": "String",
                            "default": "0",
                            "description": "(Optional)  A higher value corresponds to more verbosity. Default is to report only errors (0) ",
                            "allowedValues": [
                                "0",
                                "1",
                                "2",
                                "3",
                                "4",
                                "5"
                            ]
                        }
                    },
                    "mainSteps": [
                        {
                            "precondition": {
                                "StringEquals": [
                                    "platformType",
                                    "Linux"
                                ]
                            },
                            "action": "aws:runShellScript",
                            "name": "InstallQualysCloudAgentOnLinux",
                            "inputs": {
                                "id": "0.aws:runShellScript",
                                "timeoutSeconds": 600,
                                "runCommand": [
                                    "#!/bin/bash",
                                    "#set -eux",
                                    "#Check Whether the Qualys Cloud Agent is already installed",
                                    "apiendpoint=\"/qps/rest/1.0/download/ca/downloadbinary/\"",
                                    "INSTALLER_FILE_URL=\"{{ QualysAPIUri }}${apiendpoint}\"",
                                    "systemctl_active=$( sudo service qualys-cloud-agent status | grep Active )",
                                    "systemctl_missing=$( sudo service qualys-cloud-agent status | grep 'Loaded: not-found' )",
                                    "if [[ -z \"$systemctl_active\" ]] && ! [[ -z \"$systemctl_missing\" ]];",
                                    "then",
                                    "     # Check whether the OS is Debian or RPM based Linux and set the download location",
                                    "     os=$( grep -Ei 'debian|ubuntu|mint' /etc/*release )",
                                    "     if [[ -n \"$os\" || -f \"/etc/debian_version\" ]];",
                                    "     then",
                                    "         opersys=\"deb\"",
                                    "         echo '<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                                    "                <ServiceRequest>",
                                    "                 <data>",
                                    "                 <DownloadBinary>",
                                    "                 <platform>LINUX_UBUNTU</platform>",
                                    "                 <architecture>X_64</architecture>",
                                    "                 </DownloadBinary>",
                                    "                 </data>",
                                    "                </ServiceRequest>' > download_binary.xml ",
                                    "     else",
                                    "         opersys=\"rpm\"",
                                    "         echo '<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                                    "               <ServiceRequest>",
                                    "                <data>",
                                    "                <DownloadBinary>",
                                    "                <platform>LINUX</platform>",
                                    "                <architecture>X_64</architecture>",
                                    "                </DownloadBinary>",
                                    "                </data>",
                                    "               </ServiceRequest>' > download_binary.xml  ",
                                    "     fi",
                                    "     Downloadfile()",
                                    "     {",
                                    "         if hash curl 2>/dev/null",
                                    "         then",
                                    "           curl -u '{{ UserName }}':'{{ Password }}' -X POST -H \"Content-Type: text/xml\" -H \"X-Requested-With: curl\" --data-binary @download_binary.xml ${INSTALLER_FILE_URL} --remote-name --remote-header-name",
                                    "         else",
                                    "           cred=$(echo -n '{{ UserName }}':'{{ Password }}' | base64)",
                                    "           wget --method POST --header 'Content-Type: text/xml' --header \"Authorization: Basic '$cred'\" --body-file download_binary.xml  \"${INSTALLER_FILE_URL}\" -o QualysCloudAgent.$opersys",
                                    "         fi",
                                    "         if [[ $? != 0 ]];",
                                    "         then",
                                    "             echo \"Failed to download installer from ${INSTALLER_FILE_URL}\"",
                                    "             exit 3",
                                    "         fi",
                                    "     }",
                                    "     # Checks whether agent location is a FQDN or full path and invoke download or copy function ",
                                    "     if [[ -n \"$INSTALLER_FILE_URL\" ]]; ",
                                    "     then",
                                    "                 Downloadfile",
                                    "     else",
                                    "         echo \"No installation path specified for Qualys Cloud Agent\"",
                                    "             exit 4",
                                    "     fi",
                                    "     if [ \"$opersys\" = \"rpm\" ];",
                                    "     then",
                                    "                 sleep 5",
                                    "                 sudo rpm -ivh QualysCloudAgent.rpm",
                                    "                 sleep 5",
                                    "                 sudo /usr/local/qualys/cloud-agent/bin/qualys-cloud-agent.sh LogLevel={{ LogLevel }} ActivationId={{ ActivationID }} CustomerId={{ CustomerID }} ServerUri={{ WebServiceUri }}",
                                    "     else",
                                    "         sudo dpkg --install QualysCloudAgent.deb",
                                    "         sleep 5",
                                    "         sudo /usr/local/qualys/cloud-agent/bin/qualys-cloud-agent.sh LogLevel={{ LogLevel }} ActivationId={{ ActivationID }} CustomerId={{ CustomerID }} ServerUri={{ WebServiceUri }}",
                                    "     fi",
                                    "else",
                                    "echo \"QualysCloudAgent is already installed on this and running\"",
                                    "fi"
                                ]
                            }
                        },
                        {
                            "precondition": {
                                "StringEquals": [
                                    "platformType",
                                    "Windows"
                                ]
                            },
                            "action": "aws:runPowerShellScript",
                            "name": "InstallQualysCloudAgentOnWindows",
                            "inputs": {
                                "id": "0.aws:runPowerShellScript",
                                "timeoutSeconds": 600,
                                "runCommand": [
                                    "function New-TemporaryDirectory {",
                                    "  $parent = [System.IO.Path]::GetTempPath()",
                                    "  [string] $name = [System.Guid]::NewGuid()",
                                    "  New-Item -ItemType Directory -Path (Join-Path $parent $name)",
                                    "}",
                                    "$tempdir = New-TemporaryDirectory",
                                    "Set-Location -Path $tempdir",
                                    "$apiendpoint='/qps/rest/1.0/download/ca/downloadbinary/'",
                                    "$installerUrl = '{{ QualysAPIUri }}'+($apiendpoint)",
                                    "$agentInstaller=\"QualysCloudAgent.exe\"",
                                    "$agentInstallerlog=Join-Path $tempdir $agentInstaller",
                                    "if (Get-Service \"QualysAgent\" -ErrorAction SilentlyContinue)",
                                    "{",
                                    "  Write-Host \"Qualys Cloud Agent is already installed, Exiting\"",
                                    "  exit 0",
                                    "}",
                                    "#Download the Qualys Cloud agent",
                                    "Function Download_file",
                                    "{",
                                    "     Try",
                                    "     {",
                                    "         $headers = New-Object \"System.Collections.Generic.Dictionary[[String],[String]]\"",
                                    "         $headers.Add(\"Content-Type\", \"text/xml\") ",
                                    "         $pair=\"$('{{ UserName }}'):$('{{ Password }}')\"",
                                    "         $bytes=[System.Text.Encoding]::ASCII.GetBytes($pair)",
                                    "         $base64=[System.Convert]::ToBase64String($bytes)",
                                    "         $headers.Add(\"Authorization\", \"Basic $base64\")",
                                    "         $body = \"<?xml version=`\"1.0`\" encoding=`\"UTF-8`\"?>",
                                    "         `n<ServiceRequest>",
                                    "         `n <data>",
                                    "         `n <DownloadBinary>",
                                    "         `n <platform>WINDOWS</platform>",
                                    "         `n <architecture>X_86_64</architecture>",
                                    "         `n </DownloadBinary>",
                                    "         `n </data>",
                                    "         `n</ServiceRequest>\"",
                                    "         Invoke-WebRequest $installerUrl -Method 'POST' -Headers $headers -Body $body -OutFile $agentInstallerlog",
                                    "     }",
                                    "     Catch",
                                    "     {",
                                    "         Write-Host \"Error while downloading installer\"",
                                    "         Write-Host $_.Exception|format-list -force",
                                    "         exit 3",
                                    "     }",
                                    "}",
                                    "#Check whether agent location is a FQDN or full path and invoke download or copy function",
                                    "if ( $installerUrl.Substring(0,4) -eq 'http')",
                                    "{",
                                    "    Download_file",
                                    "}",
                                    "Else",
                                    "{",
                                    "    Copy-Item $agentInstallerlog ",
                                    "}",
                                    "# Install the Qualys Cloud Agent",
                                    "$customerID = -join('{', '{{ CustomerID }}', '}')",
                                    "$activationID = -join('{', '{{ ActivationID }}', '}')",
                                    "Try",
                                    "{",
                                    "     & $agentInstallerlog CustomerId=\"$customerID\" ActivationId=\"$activationID\" WebServiceUri={{ WebServiceUri }}",
                                    "}",
                                    "Catch",
                                    "{",
                                    "     Write-Host \"Installation failed, exception raised during installation\"",
                                    "     Write-Host $_.Exception|format-list -force",
                                    "     exit 6",
                                    "}"
                                ]
                            }
                        }
                    ]
                },
                "DocumentFormat": "JSON",
                "DocumentType": "Command",
                "Name": { "Ref" : "SSMdocumentName" }
            }
        }
    }
}
